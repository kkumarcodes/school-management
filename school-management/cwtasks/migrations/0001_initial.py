# Generated by Django 4.2.5 on 2023-09-21 13:14

from django.conf import settings
import django.contrib.postgres.fields
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cwcounseling', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.TextField(blank=True, default='')),
                ('description', models.TextField(blank=True, default='')),
                ('active', models.BooleanField(default=True)),
                ('key', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('editable', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=255)),
                ('title', models.TextField(blank=True, default='')),
                ('description', models.TextField(blank=True, default='')),
                ('instructions', models.TextField(blank=True, default='')),
                ('placeholder', models.TextField(blank=True, default='')),
                ('default', models.TextField(blank=True)),
                ('input_type', models.CharField(choices=[('textbox', 'Textbox (one line)'), ('textarea', 'Text area (multiple lines)'), ('select', 'Select (one selection)'), ('multi', 'Multi-Select (allow multiple selections)'), ('checkbox', 'Checkbox (boolean)'), ('checkboxes', 'Checkboxes (allows for multiple checks)'), ('radio', 'Radio options list (one-line radio list)'), ('updown', 'Input[type=number]'), ('range', 'Input[type=range]')], default='textbox', max_length=15)),
                ('field_type', models.CharField(choices=[('string', 'String'), ('number', 'Number'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('array', 'Array'), ('null', 'Null')], default='string', max_length=12)),
                ('required', models.BooleanField(default=False)),
                ('min_length', models.IntegerField(blank=True, null=True)),
                ('max_length', models.IntegerField(blank=True, null=True)),
                ('min_num', models.IntegerField(blank=True, null=True)),
                ('max_num', models.IntegerField(blank=True, null=True)),
                ('field_format', models.CharField(blank=True, choices=[('email', 'Email Type'), ('uri', 'URI Type'), ('data-url', 'File Type'), ('date', 'Date Type'), ('date-time', 'DateTime Type')], max_length=12)),
                ('field_pattern', models.CharField(blank=True, max_length=100)),
                ('choices', models.JSONField(blank=True, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('order', models.IntegerField(default=0)),
                ('hidden', models.BooleanField(default=False)),
                ('inline', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FormFieldEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Form field entry',
                'verbose_name_plural': 'Form field entries',
            },
        ),
        migrations.CreateModel(
            name='FormSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('archived', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('due', models.DateTimeField(blank=True, null=True)),
                ('reminder', models.DateTimeField(blank=True, null=True)),
                ('last_reminder_sent', models.DateTimeField(blank=True, null=True)),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('archived', models.DateTimeField(blank=True, null=True)),
                ('content_submission', models.TextField(blank=True)),
                ('application', models.CharField(blank=True, choices=[('common_app', 'Common App'), ('uc', 'UC App'), ('coalition', 'Coalition App'), ('apply_texas', 'ApplyTexas'), ('questbridge', 'Questbridge'), ('ucas', 'UCAS'), ('school_specific', 'school_specific')], default='', max_length=255)),
                ('allow_content_submission', models.BooleanField(default=True)),
                ('require_content_submission', models.BooleanField(default=False)),
                ('allow_file_submission', models.BooleanField(default=True)),
                ('require_file_submission', models.BooleanField(default=False)),
                ('allow_form_submission', models.BooleanField(default=False)),
                ('require_form_submission', models.BooleanField(default=False)),
                ('task_type', models.CharField(blank=True, max_length=255)),
                ('related_object_pk', models.IntegerField(blank=True, null=True)),
                ('prompt_id', models.CharField(blank=True, max_length=255)),
                ('visible_to_counseling_student', models.BooleanField(default=False)),
                ('assigned_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('roadmap_key', models.TextField(blank=True)),
                ('shared', models.BooleanField(default=False)),
                ('task_type', models.CharField(blank=True, choices=[('essay', 'Essay'), ('rec', 'Rec'), ('school_research', 'School Research'), ('survey', 'Survey'), ('testing', 'Testing'), ('other', 'Other')], default='essay', max_length=255)),
                ('title', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('archived', models.DateTimeField(blank=True, null=True)),
                ('allow_content_submission', models.BooleanField(default=False)),
                ('require_content_submission', models.BooleanField(default=False)),
                ('allow_file_submission', models.BooleanField(default=False)),
                ('require_file_submission', models.BooleanField(default=False)),
                ('allow_form_submission', models.BooleanField(default=False)),
                ('require_form_submission', models.BooleanField(default=False)),
                ('repeatable', models.BooleanField(default=False)),
                ('include_school_sud_values', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('on_complete_sud_update', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('on_assign_sud_update', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('only_alter_tracker_values', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(default=''), blank=True, default=list, size=None)),
                ('counseling_parent_task', models.BooleanField(default=False)),
                ('counselor_meeting_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_templates', to='cwcounseling.counselormeetingtemplate')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_task_templates', to=settings.AUTH_USER_MODEL)),
                ('derived_from_task_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='derived_task_templates', to='cwtasks.tasktemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
