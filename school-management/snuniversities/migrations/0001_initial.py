# Generated by Django 4.2.5 on 2023-09-21 13:14

from django.conf import settings
import django.contrib.postgres.fields
import django.core.serializers.json
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Deadline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('enddate', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeadlineCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('abbreviation', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('definition', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeadlineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('abbreviation', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('definition', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('address_line_two', models.CharField(blank=True, max_length=255)),
                ('zip_code', models.CharField(blank=True, max_length=11)),
                ('country', models.CharField(blank=True, default='United States', max_length=255)),
                ('set_timezone', models.CharField(blank=True, max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('long_name', models.CharField(max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('abbreviations', models.CharField(blank=True, max_length=255)),
                ('rank', models.IntegerField(null=True)),
                ('active', models.BooleanField(default=True)),
                ('us_news_url', models.URLField(blank=True, max_length=255, null=True)),
                ('niche_url', models.URLField(blank=True, max_length=255, null=True)),
                ('campus_reel_url', models.URLField(blank=True, max_length=255, null=True)),
                ('tpr_url', models.URLField(blank=True, max_length=255, null=True)),
                ('college_board_url', models.URLField(blank=True, max_length=255, null=True)),
                ('unigo_url', models.URLField(blank=True, max_length=255, null=True)),
                ('twitter_url', models.URLField(blank=True, max_length=255, null=True)),
                ('facebook_url', models.URLField(blank=True, max_length=255, null=True)),
                ('instagram_url', models.URLField(blank=True, max_length=255, null=True)),
                ('youtube_url', models.URLField(blank=True, max_length=255, null=True)),
                ('pinterest_url', models.URLField(blank=True, max_length=255, null=True)),
                ('linkedin_url', models.URLField(blank=True, max_length=255, null=True)),
                ('accepted_applications', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('common_app', 'Common App'), ('uc', 'UC App'), ('coalition', 'Coalition App'), ('apply_texas', 'ApplyTexas'), ('questbridge', 'Questbridge'), ('ucas', 'UCAS'), ('school_specific', 'school_specific')], max_length=255), default=list, help_text='The applications that this university accepts', size=None)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('logo', models.ImageField(blank=True, upload_to='universities/logos/')),
                ('scid', models.CharField(blank=True, max_length=255)),
                ('iped', models.CharField(blank=True, max_length=255)),
                ('scorecard_data', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('common_app_personal_statement_required', models.BooleanField(default=False)),
                ('transcript_requirements', models.TextField(blank=True)),
                ('courses_and_grades', models.TextField(blank=True)),
                ('common_app_portfolio', models.TextField(blank=True)),
                ('testing_requirements', models.TextField(blank=True)),
                ('common_app_test_policy', models.TextField(blank=True)),
                ('counselor_recommendation_required', models.BooleanField(default=False)),
                ('mid_year_report', models.BooleanField(default=False)),
                ('international_tests', models.TextField(blank=True)),
                ('required_teacher_recommendations', models.IntegerField(default=0)),
                ('optional_teacher_recommendations', models.IntegerField(default=0)),
                ('optional_other_recommendations', models.IntegerField(default=0)),
                ('required_other_recommendations', models.IntegerField(default=0)),
                ('interview_requirements', models.TextField(blank=True, choices=[('Required', 'Required'), ('Optional', 'Optional'), ('Not Offered', 'Not Offered')])),
                ('need_status', models.TextField(blank=True)),
                ('demonstrated_interest', models.TextField(blank=True)),
                ('international_sat_act_subject_test_required', models.BooleanField(default=False)),
                ('resume_required', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UniversityList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('assigned_to', models.ManyToManyField(blank=True, related_name='university_lists_assigned', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='university_lists_created', to=settings.AUTH_USER_MODEL)),
                ('owned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='university_lists_owned', to=settings.AUTH_USER_MODEL)),
                ('universities', models.ManyToManyField(blank=True, related_name='university_lists', to='snuniversities.university')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentUniversityDecision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_applying', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('MAYBE', 'Maybe')], default='MAYBE', max_length=5)),
                ('target_reach_safety', models.CharField(blank=True, choices=[('target', 'Target'), ('reach', 'Reach'), ('far_reach', 'Far Reach'), ('likely', 'Likely'), ('target_reach', 'Target/Reach'), ('target_likely', 'Target/Likely'), ('', 'None')], default='', max_length=255)),
                ('custom_deadline', models.DateTimeField(blank=True, null=True)),
                ('custom_deadline_description', models.TextField(blank=True)),
                ('goal_date', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True)),
                ('note_counselor_private', models.TextField(blank=True)),
                ('submitted', models.DateTimeField(blank=True, null=True)),
                ('major', models.CharField(blank=True, max_length=255)),
                ('application', models.CharField(blank=True, choices=[('common_app', 'Common App'), ('uc', 'UC App'), ('coalition', 'Coalition App'), ('apply_texas', 'ApplyTexas'), ('questbridge', 'Questbridge'), ('ucas', 'UCAS'), ('school_specific', 'school_specific')], default='', max_length=255)),
                ('application_status', models.CharField(blank=True, choices=[('n_a', 'N/A'), ('in_progress', 'In Progress'), ('ready', 'Ready to Submit'), ('on_deck', 'On Deck'), ('submitted', 'Submitted')], default='', max_length=255)),
                ('application_status_note', models.TextField(blank=True)),
                ('short_answer_note', models.TextField(blank=True)),
                ('transcript_status', models.CharField(blank=True, choices=[('', 'None'), ('n_a', 'N/A'), ('required', 'required'), ('optional', 'optional'), ('assigned', 'Assigned to Order'), ('in_progress', 'In Progress'), ('requested', 'Requested/Ordered'), ('received', 'Received')], default='', max_length=255)),
                ('transcript_note', models.TextField(blank=True)),
                ('test_scores_status', models.CharField(blank=True, choices=[('', 'None'), ('n_a', 'N/A'), ('required', 'required'), ('optional', 'optional'), ('assigned', 'Assigned to Order'), ('in_progress', 'In Progress'), ('requested', 'Requested/Ordered'), ('received', 'Received')], default='', max_length=255)),
                ('test_scores_note', models.TextField(blank=True)),
                ('recommendation_one_status', models.CharField(blank=True, choices=[('', 'None'), ('n_a', 'N/A'), ('required', 'required'), ('optional', 'optional'), ('assigned', 'Assigned to Order'), ('in_progress', 'In Progress'), ('requested', 'Requested/Ordered'), ('received', 'Received')], default='', max_length=255)),
                ('recommendation_one_note', models.TextField(blank=True)),
                ('recommendation_two_status', models.CharField(blank=True, choices=[('', 'None'), ('n_a', 'N/A'), ('required', 'required'), ('optional', 'optional'), ('assigned', 'Assigned to Order'), ('in_progress', 'In Progress'), ('requested', 'Requested/Ordered'), ('received', 'Received')], default='', max_length=255)),
                ('recommendation_two_note', models.TextField(blank=True)),
                ('recommendation_three_status', models.CharField(blank=True, choices=[('', 'None'), ('n_a', 'N/A'), ('required', 'required'), ('optional', 'optional'), ('assigned', 'Assigned to Order'), ('in_progress', 'In Progress'), ('requested', 'Requested/Ordered'), ('received', 'Received')], default='', max_length=255)),
                ('recommendation_four_status', models.CharField(blank=True, choices=[('', 'None'), ('n_a', 'N/A'), ('required', 'required'), ('optional', 'optional'), ('assigned', 'Assigned to Order'), ('in_progress', 'In Progress'), ('requested', 'Requested/Ordered'), ('received', 'Received')], default='', max_length=255)),
                ('standardized_testing', models.TextField(blank=True)),
                ('acceptance_status', models.CharField(blank=True, choices=[('waitlisted_then_accepted', 'waitlisted_then_accepted'), ('waitlisted_then_not_accepted', 'waitlisted_then_not_accepted'), ('withdrawn', 'withdrawn'), ('not_reported', 'not_reported'), ('accepted', 'accepted'), ('accepted_spring', 'accepted_spring'), ('alternate', 'alternate'), ('deferred', 'deferred'), ('deferred_accepted', 'deferred_accepted'), ('deferred_then_not_accepted', 'deferred_then_not_accepted'), ('deferred_then_waitlist', 'deferred_then_waitlist'), ('deferred_then_withdrew', 'deferred_then_withdrew'), ('guaranteed_transfer', 'guaranteed_transfer'), ('not_accepted', 'not_accepted'), ('waitlisted', 'waitlisted')], default='', max_length=255)),
                ('scholarship', models.PositiveSmallIntegerField(default=0)),
                ('twin', models.BooleanField(default=False)),
                ('legacy', models.BooleanField(default=False)),
                ('honors_college', models.BooleanField(default=False)),
                ('additional_requirement_deadline', models.BooleanField(default=False)),
                ('additional_requirement_deadline_note', models.TextField(blank=True)),
                ('short_answer_completion', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('send_test_scores', models.BooleanField(default=False)),
                ('deadline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_university_decisions', to='snuniversities.deadline')),
            ],
        ),
    ]
