# Generated by Django 4.2.5 on 2023-09-21 13:14

import sntutoring.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sntutoring', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sntasks', '0003_initial'),
        ('snresources', '0001_initial'),
        ('snusers', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='tutortimecard',
            name='admin_approver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='snusers.administrator'),
        ),
        migrations.AddField(
            model_name='tutortimecard',
            name='tutor',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='time_cards', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='tutoringsessionnotes',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tutoring_session_notes', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='tutoringsessionnotes',
            name='group_tutoring_session',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tutoring_session_notes', to='sntutoring.grouptutoringsession'),
        ),
        migrations.AddField(
            model_name='tutoringsessionnotes',
            name='resources',
            field=models.ManyToManyField(related_name='tutoring_session_notes', to='snresources.resource'),
        ),
        migrations.AddField(
            model_name='tutoringservice',
            name='locations',
            field=models.ManyToManyField(blank=True, related_name='tutoring_services', to='sntutoring.location'),
        ),
        migrations.AddField(
            model_name='tutoringservice',
            name='tutors',
            field=models.ManyToManyField(blank=True, related_name='tutoring_services', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='tutoringpackagepurchase',
            name='purchase_reversed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reversed_tutoring_package_purchases', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tutoringpackagepurchase',
            name='purchased_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tutoring_package_purchases', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tutoringpackagepurchase',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutoring_package_purchases', to='snusers.student'),
        ),
        migrations.AddField(
            model_name='tutoringpackagepurchase',
            name='tutoring_package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutoring_package_purchases', to='sntutoring.tutoringpackage'),
        ),
        migrations.AddField(
            model_name='tutoringpackage',
            name='group_tutoring_sessions',
            field=models.ManyToManyField(blank=True, related_name='tutoring_packages', to='sntutoring.grouptutoringsession'),
        ),
        migrations.AddField(
            model_name='tutoringpackage',
            name='locations',
            field=models.ManyToManyField(blank=True, related_name='tutoring_packages', to='sntutoring.location'),
        ),
        migrations.AddField(
            model_name='tutoringpackage',
            name='resource_groups',
            field=models.ManyToManyField(blank=True, related_name='tutoring_packages', to='snresources.resourcegroup'),
        ),
        migrations.AddField(
            model_name='tutoringpackage',
            name='restricted_tutor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restricted_tutoring_packages', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='tutoravailability',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='testresult',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='snusers.student'),
        ),
        migrations.AddField(
            model_name='studenttutoringsession',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_student_tutoring_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studenttutoringsession',
            name='group_tutoring_session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_tutoring_sessions', to='sntutoring.grouptutoringsession'),
        ),
        migrations.AddField(
            model_name='studenttutoringsession',
            name='individual_session_tutor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_tutoring_sessions', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='studenttutoringsession',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_tutoring_sessions', to='sntutoring.location'),
        ),
        migrations.AddField(
            model_name='studenttutoringsession',
            name='set_resources',
            field=models.ManyToManyField(related_name='student_tutoring_sessions', to='snresources.resource'),
        ),
        migrations.AddField(
            model_name='studenttutoringsession',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tutoring_sessions', to='snusers.student'),
        ),
        migrations.AddField(
            model_name='studenttutoringsession',
            name='tutoring_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_tutoring_sessions', to='sntutoring.tutoringservice'),
        ),
        migrations.AddField(
            model_name='studenttutoringsession',
            name='tutoring_session_notes',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_tutoring_sessions', to='sntutoring.tutoringsessionnotes'),
        ),
        migrations.AddField(
            model_name='recurringtutoravailability',
            name='tutor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_availability', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='grouptutoringsession',
            name='diagnostic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_tutoring_sessions', to='sntutoring.diagnostic'),
        ),
        migrations.AddField(
            model_name='grouptutoringsession',
            name='location',
            field=models.ForeignKey(default=sntutoring.models.get_default_location, on_delete=django.db.models.deletion.PROTECT, related_name='group_tutoring_sessions', to='sntutoring.location'),
        ),
        migrations.AddField(
            model_name='grouptutoringsession',
            name='primary_tutor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_group_tutoring_sessions', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='grouptutoringsession',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='group_tutoring_sessions', to='snresources.resource'),
        ),
        migrations.AddField(
            model_name='grouptutoringsession',
            name='support_tutors',
            field=models.ManyToManyField(blank=True, related_name='support_group_tutoring_sessions', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='diagnosticresult',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='diagnosticresult',
            name='diagnostic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostic_results', to='sntutoring.diagnostic'),
        ),
        migrations.AddField(
            model_name='diagnosticresult',
            name='feedback_provided_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_feedback', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='diagnosticresult',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostic_results', to='snusers.student'),
        ),
        migrations.AddField(
            model_name='diagnosticresult',
            name='submitted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_tasks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='diagnosticresult',
            name='task',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='diagnostic_result', to='sntasks.task'),
        ),
        migrations.AddField(
            model_name='diagnosticgrouptutoringsessionregistration',
            name='group_tutoring_sessions',
            field=models.ManyToManyField(related_name='diagnostic_gts_registrations', to='sntutoring.grouptutoringsession'),
        ),
        migrations.AddField(
            model_name='diagnosticgrouptutoringsessionregistration',
            name='self_assigned_diagnostics',
            field=models.ManyToManyField(related_name='diagnostic_gts_registrations', to='sntutoring.diagnostic'),
        ),
        migrations.AddField(
            model_name='diagnosticgrouptutoringsessionregistration',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostic_gts_registrations', to='snusers.student'),
        ),
        migrations.AddField(
            model_name='diagnostic',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_diagnostics', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='diagnostic',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='diagnostics', to='snresources.resource'),
        ),
        migrations.AddField(
            model_name='diagnostic',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='group_tutoring_sessions',
            field=models.ManyToManyField(blank=True, related_name='courses', to='sntutoring.grouptutoringsession'),
        ),
        migrations.AddField(
            model_name='course',
            name='location',
            field=models.ForeignKey(default=sntutoring.models.get_default_location, on_delete=django.db.models.deletion.PROTECT, related_name='courses', to='sntutoring.location'),
        ),
        migrations.AddField(
            model_name='course',
            name='package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='sntutoring.tutoringpackage'),
        ),
        migrations.AddField(
            model_name='course',
            name='primary_tutor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='snusers.tutor'),
        ),
        migrations.AddField(
            model_name='course',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='courses', to='snresources.resource'),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='courses', to='snusers.student'),
        ),
    ]
